public class HomeWork {
   static double credit = 1000;

   public static void main(String[] args) {
      // 1
      System.out.println(HomeWork.creditCalculate(300));
      System.out.println(HomeWork.creditCalculate(200));
      System.out.println(HomeWork.creditCalculate(100));
      System.out.println(HomeWork.creditCalculate(200));

      // 2
      double rate = 26.3, summa = 200, money;
      money = HomeWork.exchange(summa, rate);
      System.out.println(money);

      // 3
      task3();

      // 4
      task4();

      // 5
      task5();

   }

   /**
    * Представьте, что вы реализуете программу для банка, которая помогает определить, погасил ли клиент кредит или нет.
    * Допустим, ежемесячная сумма платежа должна составлять 100 грн. Клиент должен выполнить 7 платежей, но
    * может платить реже большими суммами. Т.е., может двумя платежами по 300 и 400 грн. Закрыть весь долг.
    * Создайте метод, который будет в качестве аргумента принимать сумму платежа, введенную экономистом банка. Метод
    * выводит на экран информацию о состоянии кредита (сумма задолженности, сумма переплаты, сообщение об отсутствии долга).
    */
   public static String creditCalculate(double payment) {
      credit -= payment;
      String common = "Внесли: " + payment + ". ";
      if (credit > 0)
         return common + "Осталось выплатить: " + credit;
      else if (credit < 0)
         return common + "Переплата: " + (-credit);
      else
         return common + "Кредит погашен!";
   }

   /**
    * Напишите программу, которая будет выполнять конвертирование валют.
    * Пользователь вводит: сумму денег в определенной валюте, курс для
    * конвертации в другую валюту. Организуйте вывод результата операции
    * конвертирования валюты на экран.
    *
    * @param money
    * @param currency
    *
    * @return exchanged money by currency
    */
   public static double exchange(double money, double currency) {
      double result = money * currency;
      return result;
   }

   /**
    * Напишите метод, который будет определять:
    * 1) является ли введенное число положительным или отрицательным.
    * 2) Является ли оно простым (используйте технику перебора значений).
    * (Простое число — это натуральное число, которое делится на 1 и само на
    * себя. Чтобы определить простое число или нет, следует найти все его
    * целые делители. Если делителей больше 2-х, значит оно не простое.)
    * 3) Делится ли на 2, 3, 5, 6, 9 без остатка.
    */
   private static void task3() {

   }

   /**
    * Напишите метод, который в качестве аргумента принимает одномерный целочисленный массив, и сортирует его “Методом пузырька”.
    * Также напишите отдельный метод, для вывода массива на экран.
    */
   private static void task4() {

   }

   /**
    * Напишите метод, который принимает 2 аргумента: целочисленный массив и целочисленное число.
    * В методе организуйте проверку, содержит ли массив это число.
    * Метод должен возвращать логическое значение (true – содержит, false – не содержит).
    * Создайте перегрузку этого метода, который в качестве первого аргумента принимает массив элементов типа double,
    * а в качестве второго аргумента принимает аргумент типа double
    */
   private static void task5() {

   }
}